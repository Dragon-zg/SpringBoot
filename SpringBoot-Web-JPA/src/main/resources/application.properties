# \u670D\u52A1\u5668\u8BBF\u95EE\u7AEF\u53E3
server.port=8080

# \u6570\u636E\u5E93\u57FA\u672C\u914D\u7F6E
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false
spring.datasource.username=root
spring.datasource.password=123qWE

app.name=jpa
app.description=${app.name} is a Spring Boot application

security.basic.enabled=false
management.security.enabled=false
server.error.whitelabel.enabled=false
server.session.timeout=30

#log
logging.path=.
#logging.config=classpath:env/${spring.profiles.active}/log4j2.xml
logging.config=classpath:logback.xml

spring.output.ansi.enabled=detect

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

spring.datasource.druid.initial-size=3
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=10
spring.datasource.druid.max-wait=60000
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.remove-abandoned=true
spring.datasource.druid.remove-abandoned-timeout=180
#spring.datasource.druid.validation-query-timeout=
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=true
spring.datasource.druid.default-auto-commit=false
#java.sql.Connection.TRANSACTION_READ_COMMITTED
spring.datasource.druid.default-transaction-isolation=2
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.filters=stat,slf4j


spring.datasource.druid.filter.config.enabled=true
spring.datasource.druid.filter.stat.log-slow-sql=true

spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.data-source-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-connect-before-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-connect-after-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-log-error-enabled=false
spring.datasource.druid.filter.slf4j.connection-rollback-after-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-commitafterlog-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-log-error-enabled=false
spring.datasource.druid.filter.slf4j.result-set-next-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-batch-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-log-enabled=true
spring.datasource.druid.filter.slf4j.statement-execute-query-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-update-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-parameter-clear-log-enable=false
spring.datasource.druid.filter.slf4j.statement-parameter-set-log-enabled=true
spring.datasource.druid.filter.slf4j.statement-log-error-enabled=true
spring.datasource.druid.filter.slf4j.statement-prepare-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-prepare-call-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-executable-sql-log-enable=true
spring.datasource.druid.filter.slf4j.resultset-log-enabled=false

spring.datasource.druid.slf4j.slow-sql-millis=30000
spring.datasource.druid.slf4j.log-slow-sql=true
spring.datasource.druid.slf4j.merge-sql=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.database=MYSQL
spring.jpa.properties.hibernate.default_entity_mode=pojo
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
spring.jpa.properties.hibernate.current_session_context_class=thread
#spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.query.conventional_java_constants=true
spring.jpa.properties.javax.persistence.validation.mode=none
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.discriminator.ignore_explicit_for_joined=false
spring.jpa.properties.hibernate.max_fetch_depth=3

#jackson
spring.jackson.mapper.DEFAULT_VIEW_INCLUSION = false
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS = false
spring.jackson.serialization-inclusion = non_null
#spring.jackson.deserialization.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT = true
spring.jackson.deserialization.ACCEPT_SINGLE_VALUE_AS_ARRAY = true
spring.jackson.deserialization.ACCEPT_FLOAT_AS_INT = true
spring.jackson.deserialization.FAIL_ON_MISSING_CREATOR_PROPERTIES = false
spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES = false
spring.jackson.deserialization.USE_BIG_DECIMAL_FOR_FLOATS = true

#set upload file size
spring.http.multipart.maxFileSize=50Mb
spring.http.multipart.maxRequestSize=50Mb

#girl
girl.age=27
girl.cup-size=B