# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# \u521D\u59CB\u5316\u8FDE\u63A5\u6C60\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=100
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
spring.datasource.druid.max-wait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2 default=1\u5206\u949F
spring.datasource.druid.time-between-eviction-runs-millis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2
spring.datasource.druid.min-evictable-idle-time-millis=300000
# \u7528\u6765\u68C0\u6D4B\u8FDE\u63A5\u662F\u5426\u6709\u6548\u7684sql\uFF0C\u8981\u6C42\u662F\u4E00\u4E2A\u67E5\u8BE2\u8BED\u53E5\uFF0C\u5E38\u7528select 'x'\u3002\u5982\u679CvalidationQuery\u4E3Anull,testOnBorrow,testOnReturn,testWhileIdle\u90FD\u4E0D\u4F1A\u8D77\u4F5C\u7528\u3002\u8FD9\u4E2A\u53EF\u4EE5\u4E0D\u914D\u7F6E
spring.datasource.druid.validation-query=SELECT 'x' 
spring.datasource.druid.validation-query-timeout=60000
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F \u662F\u5426\u7F13\u5B58preparedStatement,\u4E5F\u5C31\u662FPSCache\u3002PSCache\u5BF9\u652F\u6301\u6E38\u6807\u7684\u6570\u636E\u5E93\u6027\u80FD\u63D0\u5347\u5DE8\u5927\uFF0C\u6BD4\u5982\u8BF4oracle\u3002\u5728mysql\u4E0B\u5EFA\u8BAE\u5173\u95ED\u3002default=false
#spring.datasource.druid.pool-prepared-statements=true
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#\u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
spring.datasource.druid.use-global-data-source-stat=true
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u542F\u7528\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899
spring.datasource.druid.filters=stat,slf4j
# \u914D\u7F6EStatFilter
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=3000
spring.datasource.druid.filter.stat.merge-sql=true
# \u914D\u7F6EConfigFilter \u6570\u636E\u5E93\u5BC6\u7801\u52A0\u5BC6 \u89C1https://github.com/alibaba/druid/wiki/%E4%BD%BF%E7%94%A8ConfigFilter
#spring.datasource.druid.filter.config.enabled=true
# \u914D\u7F6ESlf4jLogFilter
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.data-source-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-connect-before-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-connect-after-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-log-error-enabled=false
spring.datasource.druid.filter.slf4j.connection-rollback-after-log-enabled=false
spring.datasource.druid.filter.slf4j.connection-commitafterlog-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-log-error-enabled=false
spring.datasource.druid.filter.slf4j.result-set-next-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-batch-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-log-enabled=true
spring.datasource.druid.filter.slf4j.statement-execute-query-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-execute-update-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-parameter-clear-log-enable=false
spring.datasource.druid.filter.slf4j.statement-parameter-set-log-enabled=true
spring.datasource.druid.filter.slf4j.statement-log-error-enabled=true
spring.datasource.druid.filter.slf4j.statement-prepare-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-prepare-call-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-executable-sql-log-enable=true
spring.datasource.druid.filter.slf4j.resultset-log-enabled=false
# StatViewServlet\u914D\u7F6E,\u8BBE\u7F6E\u767B\u9646\u5E10\u6237\u7B49\u4FE1\u606F
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=false
#spring.datasource.druid.stat-view-servlet.login-username=admin
#spring.datasource.druid.stat-view-servlet.login-password=admin
# \u914D\u7F6EWallFilter \u9632\u706B\u5899
#spring.datasource.druid.filters=stat,slf4j,wall
#spring.datasource.druid.filter.wall.enabled=true
#spring.datasource.druid.filter.wall.db-type=mysql
#spring.datasource.druid.filter.wall.config.delete-allow=false
#spring.datasource.druid.filter.wall.config.drop-table-allow=false